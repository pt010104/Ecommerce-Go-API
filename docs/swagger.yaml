definitions:
  http.Avatar_obj:
    properties:
      media_id:
        type: string
      url:
        type: string
    type: object
  http.CartItemReq:
    properties:
      product_id:
        type: string
      quantity:
        type: integer
    required:
    - product_id
    - quantity
    type: object
  http.CategoryResponse:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  http.GetCartItemResponse:
    properties:
      medias:
        items:
          $ref: '#/definitions/http.Media_Obj'
        type: array
      price:
        type: number
      product_id:
        type: string
      product_name:
        type: string
      quantity:
        type: integer
    type: object
  http.Media_Obj:
    properties:
      media_id:
        type: string
      url:
        type: string
    type: object
  http.UpdateCartRequest:
    properties:
      items:
        items:
          $ref: '#/definitions/http.CartItemReq'
        type: array
    required:
    - items
    type: object
  http.UpdateProductReq:
    properties:
      category_ids:
        items:
          type: string
        type: array
      id:
        type: string
      media_ids:
        items:
          type: string
        type: array
      name:
        type: string
      price:
        type: number
      reorder_level:
        type: integer
      reorder_quantity:
        type: integer
      stock_level:
        type: integer
    required:
    - category_ids
    - id
    - media_ids
    - name
    - price
    - reorder_level
    - reorder_quantity
    - stock_level
    type: object
  http.UpdateResp:
    properties:
      media_id:
        type: string
    type: object
  http.addToCartRequest:
    properties:
      product_id:
        type: string
      quantity:
        type: integer
    required:
    - product_id
    - quantity
    type: object
  http.address:
    properties:
      city:
        type: string
      district:
        type: string
      street:
        type: string
    type: object
  http.categoryObject:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  http.createCategoryReq:
    properties:
      description:
        type: string
      name:
        type: string
    required:
    - description
    - name
    type: object
  http.createProductReq:
    properties:
      category_ids:
        items:
          type: string
        type: array
      media_ids:
        items:
          type: string
        type: array
      name:
        type: string
      price:
        type: number
      reorder_level:
        type: integer
      reorder_quantity:
        type: integer
      stock_level:
        type: integer
    required:
    - category_ids
    - name
    - price
    - reorder_level
    - reorder_quantity
    - stock_level
    type: object
  http.deleteProductRequest:
    properties:
      ids:
        items:
          type: string
        type: array
    type: object
  http.detailProductResp:
    properties:
      avatar:
        items:
          $ref: '#/definitions/internal_shop_delivery_http.avatar_obj'
        type: array
      category_id:
        items:
          type: string
        type: array
      category_name:
        items:
          type: string
        type: array
      id:
        type: string
      inventory_name:
        type: string
      name:
        type: string
      price:
        type: number
      shop_id:
        type: string
      shop_name:
        type: string
    required:
    - category_id
    - category_name
    - id
    - inventory_name
    - name
    - price
    - shop_id
    - shop_name
    type: object
  http.detailResp:
    properties:
      avatar:
        $ref: '#/definitions/internal_user_delivery_http.avatar_obj'
      email:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  http.distributeNewTokenResp:
    properties:
      new_access_token:
        type: string
      new_refresh_token:
        type: string
    type: object
  http.getCartResponse:
    properties:
      item:
        items:
          $ref: '#/definitions/http.getCartResponseItem'
        type: array
      meta:
        $ref: '#/definitions/internal_cart_delivery_http.listMetaResponse'
    type: object
  http.getCartResponseItem:
    properties:
      id:
        type: string
      item:
        items:
          $ref: '#/definitions/http.GetCartItemResponse'
        type: array
      shop_id:
        type: string
      shop_name:
        type: string
      user_id:
        type: string
    type: object
  http.getDetailResp:
    properties:
      address:
        $ref: '#/definitions/http.address'
      avatar_obj:
        $ref: '#/definitions/http.Avatar_obj'
      avg_rate:
        type: number
      created_at:
        type: string
      followers:
        items:
          type: string
        type: array
      id:
        type: string
      is_verified:
        type: boolean
      name:
        type: string
      phone:
        type: string
    type: object
  http.getProductResp:
    properties:
      products:
        items:
          $ref: '#/definitions/http.listProductItem'
        type: array
      shop_object:
        $ref: '#/definitions/http.shopObject'
    type: object
  http.getShopResp:
    properties:
      items:
        items:
          $ref: '#/definitions/http.getShopRespItem'
        type: array
      meta:
        $ref: '#/definitions/internal_shop_delivery_http.listMetaResponse'
    type: object
  http.getShopRespItem:
    properties:
      address:
        $ref: '#/definitions/http.address'
      avatar_obj:
        $ref: '#/definitions/http.Avatar_obj'
      avg_rate:
        type: number
      created_at:
        type: string
      followers:
        items:
          type: string
        type: array
      id:
        type: string
      is_verified:
        type: boolean
      name:
        type: string
      phone:
        type: string
      user_id:
        type: string
    type: object
  http.inventoryObject:
    properties:
      id:
        type: string
      name:
        type: string
      stock_level:
        type: integer
    type: object
  http.listProductItem:
    properties:
      avatar:
        items:
          $ref: '#/definitions/internal_shop_delivery_http.avatar_obj'
        type: array
      category_objects:
        items:
          $ref: '#/definitions/http.categoryObject'
        type: array
      id:
        type: string
      inventory_object:
        $ref: '#/definitions/http.inventoryObject'
      name:
        type: string
      price:
        type: number
      shop_id:
        type: string
    type: object
  http.productResponse:
    properties:
      id:
        type: string
      quantity:
        type: integer
    type: object
  http.registerResponse:
    properties:
      address:
        $ref: '#/definitions/http.address'
      id:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
  http.shopObject:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  http.shopResponse:
    properties:
      avt_url:
        type: string
      id:
        type: string
      name:
        type: string
      products:
        items:
          $ref: '#/definitions/http.productResponse'
        type: array
    type: object
  http.signInResp:
    properties:
      email:
        type: string
      id:
        type: string
      session_id:
        type: string
      token:
        $ref: '#/definitions/user.Token'
      username:
        type: string
    type: object
  http.signUpResponse:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  http.updateCartResponse:
    properties:
      shops:
        items:
          $ref: '#/definitions/http.shopResponse'
        type: array
    type: object
  http.updateProductResp:
    properties:
      avatar:
        items:
          $ref: '#/definitions/internal_shop_delivery_http.avatar_obj'
        type: array
      category_id:
        items:
          type: string
        type: array
      category_name:
        items:
          type: string
        type: array
      id:
        type: string
      inventory_name:
        type: string
      name:
        type: string
      price:
        type: number
      shop_id:
        type: string
      shop_name:
        type: string
    required:
    - id
    type: object
  http.updateReq:
    properties:
      email:
        type: string
      media_id:
        type: string
      name:
        type: string
    required:
    - email
    - name
    type: object
  http.updateResp:
    properties:
      address:
        $ref: '#/definitions/http.address'
      avg_rate:
        type: number
      id:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
  http.verifyShopResp:
    properties:
      is_verified:
        type: boolean
      name:
        type: string
      shop_id:
        type: string
    type: object
  internal_cart_delivery_http.listMetaResponse:
    properties:
      count:
        type: integer
      current_page:
        type: integer
      per_page:
        type: integer
      total:
        type: integer
      total_pages:
        type: integer
    type: object
  internal_shop_delivery_http.avatar_obj:
    properties:
      media_id:
        type: string
      url:
        type: string
    type: object
  internal_shop_delivery_http.listMetaResponse:
    properties:
      count:
        type: integer
      current_page:
        type: integer
      per_page:
        type: integer
      total:
        type: integer
      total_pages:
        type: integer
    type: object
  internal_user_delivery_http.avatar_obj:
    properties:
      media_id:
        type: string
      url:
        type: string
    type: object
  response.Resp:
    properties:
      data: {}
      error_code:
        type: integer
      errors: {}
      message:
        type: string
    type: object
  user.Token:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/admin/categories:
    post:
      consumes:
      - application/json
      description: Create a new category
      parameters:
      - description: Category data
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/http.createCategoryReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.CategoryResponse'
      summary: Create Category
      tags:
      - Admin
  /api/v1/admin/verify-shop:
    post:
      consumes:
      - application/json
      description: Verify a shop by ID list
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: List of Shop IDs to verify
        in: body
        name: ids
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: Verification successful
          schema:
            items:
              $ref: '#/definitions/http.verifyShopResp'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Verify shop
      tags:
      - Admin
  /api/v1/carts:
    get:
      consumes:
      - application/json
      description: Get shop by ShopIDs, IDs,if no query is passed , all cart of current
        user will be returned
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - collectionFormat: csv
        description: IDs
        in: query
        items:
          type: string
        name: ids
        type: array
      - collectionFormat: csv
        description: Shop IDs
        in: query
        items:
          type: string
        name: shop_ids
        type: array
      - default: 1
        description: Page
        in: query
        name: page
        type: integer
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.getCartResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Get cart
      tags:
      - Cart
  /api/v1/media:
    post:
      consumes:
      - multipart/form-data
      description: Upload one or multiple media files
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: Media files to upload
        in: formData
        name: files
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Resp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Upload media files
      tags:
      - Media
  /api/v1/shops:
    delete:
      consumes:
      - application/json
      description: Delete a shop
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Delete a shop
      tags:
      - Shop
    get:
      consumes:
      - application/json
      description: Get shop by Search, IDs,...
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: Search
        in: query
        name: search
        type: string
      - collectionFormat: csv
        description: IDs
        in: query
        items:
          type: string
        name: ids
        type: array
      - description: Is Verified
        in: query
        name: is_verified
        type: boolean
      - default: 1
        description: Page
        in: query
        name: page
        type: integer
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.getShopResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Get shop
      tags:
      - Shop
    patch:
      consumes:
      - application/json
      description: Update a shop
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: IDs
        in: body
        name: ids
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.updateResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Update a shop
      tags:
      - Shop
    post:
      consumes:
      - application/json
      description: Create a shop
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: Name
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: Phone
        in: body
        name: phone
        required: true
        schema:
          type: string
      - description: City
        in: body
        name: city
        required: true
        schema:
          type: string
      - description: Street
        in: body
        name: street
        required: true
        schema:
          type: string
      - description: District
        in: body
        name: district
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.registerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Create a shop
      tags:
      - Shop
  /api/v1/shops/{id}:
    get:
      consumes:
      - application/json
      description: Get shop detail by ID
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: Shop ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.getDetailResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Get shop detail
      tags:
      - Shop
  /api/v1/shops/create-product:
    post:
      consumes:
      - application/json
      description: Create a new product in the shop
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.createProductReq'
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/response.Resp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Create a product
      tags:
      - Shop
  /api/v1/shops/get-shop-id-by-user-id/{id}:
    get:
      consumes:
      - application/json
      description: Get shop ID by user ID
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Shop ID
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Get shop ID by user ID
      tags:
      - Shop
  /api/v1/shops/products/{id}:
    get:
      consumes:
      - application/json
      description: Get shop detail by id
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/http.detailProductResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: get shop detail by their id
      tags:
      - Products
  /api/v1/shops/products/delete:
    delete:
      consumes:
      - application/json
      description: delete product by id
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.deleteProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Resp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: delete product by their id
      tags:
      - Products
  /api/v1/shops/products/get-product:
    get:
      consumes:
      - application/json
      description: Retrieve a paginated list of products with optional filters , at
        least 1 parameter request body must be provided
      parameters:
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: category_ids
        type: array
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: ids
        type: array
      - in: query
        name: search
        type: string
      - in: query
        name: shop_id
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Paginated Products
          schema:
            $ref: '#/definitions/http.getProductResp'
      summary: Get products with pagination
      tags:
      - Product
  /api/v1/shops/products/update:
    post:
      consumes:
      - application/json
      description: Update product BY ID , only ID is required , other fields are optional
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.UpdateProductReq'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/http.updateProductResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Update product
      tags:
      - Products
  /api/v1/users:
    put:
      consumes:
      - application/json
      description: Update user avatar
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: Update user avatar request
        in: body
        name: updateReq
        required: true
        schema:
          $ref: '#/definitions/http.updateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.UpdateResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "404":
          description: User Not Found
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Update User avatar
      tags:
      - User
  /api/v1/users/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve detailed information about a specific user
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.detailResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "404":
          description: User Not Found
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Get User Details
      tags:
      - User
  /api/v1/users/distribute-token:
    post:
      consumes:
      - application/json
      description: Generate and distribute a new JWT token
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Verification token
        in: query
        name: token
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.distributeNewTokenResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Distribute New Token
      tags:
      - User
  /api/v1/users/forget-password:
    post:
      consumes:
      - application/json
      description: Initiate a password reset request
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Forget Password Request
      tags:
      - User
  /api/v1/users/reset-password:
    post:
      consumes:
      - application/json
      description: Reset user's password using a valid reset token
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - description: Reset token
        in: query
        name: token
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - description: New password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Reset Password
      tags:
      - User
  /api/v1/users/sign-in:
    post:
      consumes:
      - application/json
      description: Authenticate user and provide a JWT token
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        type: string
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.signInResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: User Sign In
      tags:
      - User
  /api/v1/users/sign-up:
    post:
      consumes:
      - application/json
      description: Create a new user account
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - description: Name
        in: body
        name: Name
        required: true
        schema:
          type: string
      - description: Email
        in: body
        name: Email
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: Password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.signUpResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: User Sign Up
      tags:
      - User
  /api/v1/users/signout:
    post:
      consumes:
      - application/json
      description: Sign out the current user
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: User Sign Out
      tags:
      - User
  /api/v1/users/verify-request:
    post:
      consumes:
      - application/json
      description: Verify the validity of a password reset request
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "404":
          description: Request Not Found
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Verify Email
      tags:
      - User
  /api/v1/users/verify-user:
    post:
      consumes:
      - application/json
      description: Complete user account verification
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - description: Verification token
        in: query
        name: token
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Verify User Account
      tags:
      - User
  /carts/add:
    post:
      consumes:
      - application/json
      description: ADD a product to user cart . Auto group by shop ID
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: Add to cart request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.addToCartRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Add a cart
      tags:
      - Cart
  /carts/update-cart:
    post:
      consumes:
      - application/json
      description: Update an existing cart with new product details , pass all the
        item in the cart , once the update api is called , the cart will be replaced
        with the new items
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: Cart update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.UpdateCartRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.updateCartResponse'
      summary: Update a cart
      tags:
      - Cart
swagger: "2.0"
