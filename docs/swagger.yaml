definitions:
  http.Avatar_obj:
    properties:
      media_id:
        type: string
      url:
        type: string
    type: object
  http.CartItemReq:
    properties:
      product_id:
        type: string
      quantity:
        type: integer
    required:
    - product_id
    - quantity
    type: object
  http.CategoryResponse:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  http.CreateCheckoutRequest:
    properties:
      product_ids:
        items:
          type: string
        type: array
    required:
    - product_ids
    type: object
  http.CreateOrderRequest:
    properties:
      address_id:
        type: string
      checkout_id:
        type: string
      payment_method:
        type: string
      voucher_id:
        type: string
    required:
    - address_id
    - checkout_id
    - payment_method
    type: object
  http.DetailVoucherReq:
    properties:
      code:
        type: string
      id:
        type: string
    type: object
  http.GetCartItemResponse:
    properties:
      medias:
        items:
          $ref: '#/definitions/http.Media_Obj'
        type: array
      price:
        type: number
      product_id:
        type: string
      product_name:
        type: string
      quantity:
        type: integer
    type: object
  http.Media_Obj:
    properties:
      media_id:
        type: string
      url:
        type: string
    type: object
  http.UpdateCartRequest:
    properties:
      items:
        items:
          $ref: '#/definitions/http.CartItemReq'
        type: array
    required:
    - items
    type: object
  http.UpdateOrderRequest:
    properties:
      status:
        type: string
    required:
    - status
    type: object
  http.UpdateProductReq:
    properties:
      category_ids:
        items:
          type: string
        type: array
      id:
        type: string
      media_ids:
        items:
          type: string
        type: array
      name:
        type: string
      price:
        type: number
      reorder_level:
        type: integer
      reorder_quantity:
        type: integer
      stock_level:
        type: integer
    required:
    - category_ids
    - id
    - media_ids
    - name
    - price
    - reorder_level
    - reorder_quantity
    - stock_level
    type: object
  http.UpdateResp:
    properties:
      media_id:
        type: string
    type: object
  http.addToCartRequest:
    properties:
      product_id:
        type: string
      quantity:
        type: integer
    required:
    - product_id
    - quantity
    type: object
  http.address:
    properties:
      city:
        type: string
      district:
        type: string
      street:
        type: string
    type: object
  http.address_obj:
    properties:
      city:
        type: string
      default:
        type: boolean
      district:
        type: string
      id:
        type: string
      phone:
        type: string
      province:
        type: string
      street:
        type: string
    type: object
  http.addressReq:
    properties:
      city:
        type: string
      default:
        type: boolean
      district:
        type: string
      phone:
        type: string
      province:
        type: string
      street:
        type: string
    required:
    - city
    - district
    - phone
    - province
    - street
    type: object
  http.applyVoucherReq:
    properties:
      code:
        type: string
      id:
        type: string
      order_amount:
        type: number
    required:
    - order_amount
    type: object
  http.categoryObject:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  http.categoryResp:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  http.checkoutResponse:
    properties:
      checkout_id:
        type: string
      expired_at:
        type: string
      items:
        items:
          $ref: '#/definitions/http.itemResponse'
        type: array
      total_price:
        type: number
    type: object
  http.createCategoryReq:
    properties:
      description:
        type: string
      name:
        type: string
    required:
    - description
    - name
    type: object
  http.createProductReq:
    properties:
      category_ids:
        items:
          type: string
        type: array
      media_ids:
        items:
          type: string
        type: array
      name:
        type: string
      price:
        type: number
      reorder_level:
        type: integer
      reorder_quantity:
        type: integer
      stock_level:
        type: integer
    required:
    - category_ids
    - name
    - price
    - reorder_level
    - reorder_quantity
    - stock_level
    type: object
  http.createVoucherReq:
    properties:
      applicable_category_ids:
        items:
          type: string
        type: array
      applicable_product_ids:
        items:
          type: string
        type: array
      code:
        type: string
      description:
        type: string
      discount_amount:
        type: number
      discount_type:
        type: string
      max_discount_amount:
        type: number
      minimum_order_amount:
        type: number
      name:
        type: string
      usage_limit:
        type: integer
      valid_from:
        type: string
      valid_to:
        type: string
    required:
    - code
    - discount_amount
    - discount_type
    - name
    - valid_from
    - valid_to
    type: object
  http.deleteProductRequest:
    properties:
      ids:
        items:
          type: string
        type: array
    type: object
  http.detailAddressResp:
    properties:
      addressess:
        items:
          $ref: '#/definitions/http.address_obj'
        type: array
    type: object
  http.detailProductResp:
    properties:
      avatar:
        items:
          $ref: '#/definitions/internal_shop_delivery_http.avatar_obj'
        type: array
      category_id:
        items:
          type: string
        type: array
      category_name:
        items:
          type: string
        type: array
      description:
        type: string
      id:
        type: string
      inventory_name:
        type: string
      name:
        type: string
      price:
        type: number
      shop_id:
        type: string
      shop_name:
        type: string
      view:
        type: integer
    type: object
  http.detailResp:
    properties:
      addressess:
        items:
          $ref: '#/definitions/http.address_obj'
        type: array
      avatar:
        $ref: '#/definitions/internal_user_delivery_http.avatar_obj'
      email:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  http.distributeNewTokenResp:
    properties:
      new_access_token:
        type: string
      new_refresh_token:
        type: string
    type: object
  http.getAllProductsResp:
    properties:
      items:
        items:
          $ref: '#/definitions/http.getAllProductsRespItem'
        type: array
      meta:
        $ref: '#/definitions/internal_shop_delivery_http.listMetaResponse'
    type: object
  http.getAllProductsRespItem:
    properties:
      categories:
        items:
          $ref: '#/definitions/http.categoryResp'
        type: array
      description:
        type: string
      id:
        type: string
      images:
        items:
          $ref: '#/definitions/http.mediaResp'
        type: array
      inventory:
        $ref: '#/definitions/http.inventoryResp'
      name:
        type: string
      price:
        type: number
      shop:
        $ref: '#/definitions/http.shopResp'
    type: object
  http.getCartResponse:
    properties:
      item:
        items:
          $ref: '#/definitions/http.getCartResponseItem'
        type: array
      meta:
        $ref: '#/definitions/internal_cart_delivery_http.listMetaResponse'
    type: object
  http.getCartResponseItem:
    properties:
      id:
        type: string
      item:
        items:
          $ref: '#/definitions/http.GetCartItemResponse'
        type: array
      shop_id:
        type: string
      shop_name:
        type: string
      user_id:
        type: string
    type: object
  http.getDetailResp:
    properties:
      address:
        $ref: '#/definitions/http.address'
      avatar_obj:
        $ref: '#/definitions/http.Avatar_obj'
      avg_rate:
        type: number
      created_at:
        type: string
      followers:
        items:
          type: string
        type: array
      id:
        type: string
      is_verified:
        type: boolean
      name:
        type: string
      phone:
        type: string
    type: object
  http.getProductResp:
    properties:
      meta:
        $ref: '#/definitions/http.listProductMetaResponse'
      products:
        items:
          $ref: '#/definitions/http.listProductItem'
        type: array
      shop_object:
        $ref: '#/definitions/internal_shop_delivery_http.shopObject'
    type: object
  http.getShopResp:
    properties:
      items:
        items:
          $ref: '#/definitions/http.getShopRespItem'
        type: array
      meta:
        $ref: '#/definitions/internal_shop_delivery_http.listMetaResponse'
    type: object
  http.getShopRespItem:
    properties:
      address:
        $ref: '#/definitions/http.address'
      avatar_obj:
        $ref: '#/definitions/http.Avatar_obj'
      avg_rate:
        type: number
      created_at:
        type: string
      followers:
        items:
          type: string
        type: array
      id:
        type: string
      is_verified:
        type: boolean
      name:
        type: string
      phone:
        type: string
      user_id:
        type: string
    type: object
  http.inventoryObject:
    properties:
      id:
        type: string
      name:
        type: string
      reorder_level:
        type: integer
      reorder_quantity:
        type: integer
      sold:
        type: integer
      stock_level:
        type: integer
    required:
    - reorder_level
    - reorder_quantity
    type: object
  http.inventoryResp:
    properties:
      id:
        type: string
    type: object
  http.itemResponse:
    properties:
      price:
        type: number
      product_list:
        items:
          $ref: '#/definitions/http.productObject'
        type: array
      shop_objects:
        $ref: '#/definitions/internal_order_delivery_http.shopObject'
    type: object
  http.listCategoryResponse:
    properties:
      categories:
        items:
          $ref: '#/definitions/http.CategoryResponse'
        type: array
    type: object
  http.listProductItem:
    properties:
      avatar:
        items:
          $ref: '#/definitions/internal_shop_delivery_http.avatar_obj'
        type: array
      category_objects:
        items:
          $ref: '#/definitions/http.categoryObject'
        type: array
      description:
        type: string
      id:
        type: string
      inventory_object:
        $ref: '#/definitions/http.inventoryObject'
      name:
        type: string
      price:
        type: number
      shop_id:
        type: string
    type: object
  http.listProductMetaResponse:
    properties:
      count:
        type: integer
      current_page:
        type: integer
      per_page:
        type: integer
      total:
        type: integer
      total_pages:
        type: integer
    type: object
  http.mediaResp:
    properties:
      media_id:
        type: string
      url:
        type: string
    type: object
  http.productObject:
    properties:
      price:
        type: number
      product_id:
        type: string
      product_image:
        type: string
      product_name:
        type: string
      quantity:
        type: integer
    type: object
  http.productResponse:
    properties:
      id:
        type: string
      quantity:
        type: integer
    type: object
  http.registerResponse:
    properties:
      address:
        $ref: '#/definitions/http.address'
      id:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
  http.shopResp:
    properties:
      city:
        type: string
      district:
        type: string
      id:
        type: string
      name:
        type: string
      phone:
        type: string
      street:
        type: string
    type: object
  http.shopResponse:
    properties:
      avt_url:
        type: string
      id:
        type: string
      name:
        type: string
      products:
        items:
          $ref: '#/definitions/http.productResponse'
        type: array
    type: object
  http.signInResp:
    properties:
      email:
        type: string
      id:
        type: string
      session_id:
        type: string
      token:
        $ref: '#/definitions/user.Token'
      username:
        type: string
    type: object
  http.signUpResponse:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  http.updateCartResponse:
    properties:
      shops:
        items:
          $ref: '#/definitions/http.shopResponse'
        type: array
    type: object
  http.updateProductResp:
    properties:
      avatar:
        items:
          $ref: '#/definitions/internal_shop_delivery_http.avatar_obj'
        type: array
      category_id:
        items:
          type: string
        type: array
      category_name:
        items:
          type: string
        type: array
      id:
        type: string
      inventory_name:
        type: string
      name:
        type: string
      price:
        type: number
      shop_id:
        type: string
      shop_name:
        type: string
    required:
    - id
    type: object
  http.updateReq:
    properties:
      email:
        type: string
      media_id:
        type: string
      name:
        type: string
    required:
    - email
    - name
    type: object
  http.updateResp:
    properties:
      address:
        $ref: '#/definitions/http.address'
      avg_rate:
        type: number
      id:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
  http.updateShopRequest:
    properties:
      city:
        type: string
      district:
        type: string
      ids:
        items:
          type: string
        type: array
      name:
        type: string
      phone:
        type: string
      street:
        type: string
    required:
    - ids
    type: object
  http.verifyShopResp:
    properties:
      is_verified:
        type: boolean
      name:
        type: string
      shop_id:
        type: string
    type: object
  internal_cart_delivery_http.listMetaResponse:
    properties:
      count:
        type: integer
      current_page:
        type: integer
      per_page:
        type: integer
      total:
        type: integer
      total_pages:
        type: integer
    type: object
  internal_order_delivery_http.shopObject:
    properties:
      shop_id:
        type: string
      shop_name:
        type: string
    type: object
  internal_shop_delivery_http.avatar_obj:
    properties:
      media_id:
        type: string
      url:
        type: string
    type: object
  internal_shop_delivery_http.listMetaResponse:
    properties:
      count:
        type: integer
      current_page:
        type: integer
      per_page:
        type: integer
      total:
        type: integer
      total_pages:
        type: integer
    type: object
  internal_shop_delivery_http.shopObject:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  internal_user_delivery_http.avatar_obj:
    properties:
      media_id:
        type: string
      url:
        type: string
    type: object
  response.Resp:
    properties:
      data: {}
      error_code:
        type: integer
      errors: {}
      message:
        type: string
    type: object
  user.Token:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/admin/categories:
    post:
      consumes:
      - application/json
      description: Create a new category
      parameters:
      - description: Category data
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/http.createCategoryReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.CategoryResponse'
      summary: Create Category
      tags:
      - Admin
  /api/v1/admin/verify-shop:
    post:
      consumes:
      - application/json
      description: Verify a shop by ID list
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: List of Shop IDs to verify
        in: body
        name: ids
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: Verification successful
          schema:
            items:
              $ref: '#/definitions/http.verifyShopResp'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Verify shop
      tags:
      - Admin
  /api/v1/carts:
    get:
      consumes:
      - application/json
      description: Get shop by ShopIDs, IDs,if no query is passed , all cart of current
        user will be returned
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - collectionFormat: csv
        description: IDs
        in: query
        items:
          type: string
        name: ids
        type: array
      - collectionFormat: csv
        description: Shop IDs
        in: query
        items:
          type: string
        name: shop_ids
        type: array
      - default: 1
        description: Page
        in: query
        name: page
        type: integer
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.getCartResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Get cart
      tags:
      - Cart
    patch:
      consumes:
      - application/json
      description: Update an existing cart with new product details , pass all the
        item in the cart , once the update api is called , the cart will be replaced
        with the new items
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: Cart update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.UpdateCartRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.updateCartResponse'
      summary: Update a cart
      tags:
      - Cart
  /api/v1/carts/add:
    post:
      consumes:
      - application/json
      description: ADD a product to user cart . Auto group by shop ID
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: Add to cart request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.addToCartRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Add a cart
      tags:
      - Cart
  /api/v1/categories:
    get:
      consumes:
      - application/json
      description: get cate by name or ids , if both are not present , return all
        categories
      parameters:
      - collectionFormat: csv
        description: ids
        in: query
        items:
          type: string
        name: ids
        type: array
      - description: name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.listCategoryResponse'
      summary: get cate by name or ids , if both are not present , return all categories
      tags:
      - categories
  /api/v1/media:
    post:
      consumes:
      - multipart/form-data
      description: Upload one or multiple media files
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: Media files to upload
        in: formData
        name: files
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Resp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Upload media files
      tags:
      - Media
  /api/v1/orders:
    get:
      consumes:
      - application/json
      description: List order
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - in: query
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Resp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: List order
      tags:
      - Order
    post:
      consumes:
      - application/json
      description: Create order
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.CreateOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Resp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Create order
      tags:
      - Order
  /api/v1/orders/checkout:
    post:
      consumes:
      - application/json
      description: Create checkout
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.CreateCheckoutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/http.checkoutResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Create checkout
      tags:
      - Order
  /api/v1/orders/shop:
    get:
      consumes:
      - application/json
      description: List orders for shop
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - in: query
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Resp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: List order shop
      tags:
      - Order
  /api/v1/orders/shop/{order_id}:
    patch:
      consumes:
      - application/json
      description: Update order status
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: Order ID
        in: path
        name: order_id
        required: true
        type: string
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.UpdateOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Resp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Update order
      tags:
      - Order
  /api/v1/shops:
    delete:
      consumes:
      - application/json
      description: Delete a shop
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Delete a shop
      tags:
      - Shop
    get:
      consumes:
      - application/json
      description: Get shop by Search, IDs,...
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: Search
        in: query
        name: search
        type: string
      - collectionFormat: csv
        description: IDs
        in: query
        items:
          type: string
        name: ids
        type: array
      - description: Is Verified
        in: query
        name: is_verified
        type: boolean
      - default: 1
        description: Page
        in: query
        name: page
        type: integer
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.getShopResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Get shop
      tags:
      - Shop
    patch:
      consumes:
      - application/json
      description: Update a shop
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: Update shop request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.updateShopRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.updateResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Update a shop
      tags:
      - Shop
    post:
      consumes:
      - application/json
      description: Create a shop
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: Name
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: Phone
        in: body
        name: phone
        required: true
        schema:
          type: string
      - description: City
        in: body
        name: city
        required: true
        schema:
          type: string
      - description: Street
        in: body
        name: street
        required: true
        schema:
          type: string
      - description: District
        in: body
        name: district
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.registerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Create a shop
      tags:
      - Shop
  /api/v1/shops/{id}:
    get:
      consumes:
      - application/json
      description: Get shop detail by ID
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: Shop ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.getDetailResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Get shop detail
      tags:
      - Shop
  /api/v1/shops/get-shop-id-by-user-id/{id}:
    get:
      consumes:
      - application/json
      description: Get shop ID by user ID
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Shop ID
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Get shop ID by user ID
      tags:
      - Shop
  /api/v1/shops/products:
    delete:
      consumes:
      - application/json
      description: delete product by id
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.deleteProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.Resp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: delete product by their id
      tags:
      - Products
    get:
      consumes:
      - application/json
      description: Retrieve a paginated list of products with optional filters , at
        least 1 parameter request body must be provided
      parameters:
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: category_ids
        type: array
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: ids
        type: array
      - in: query
        name: search
        type: string
      - in: query
        name: shop_id
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Paginated Products
          schema:
            $ref: '#/definitions/http.getProductResp'
      summary: Get products with pagination
      tags:
      - Product
    post:
      consumes:
      - application/json
      description: Create a new product in the shop
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.createProductReq'
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/response.Resp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Create a product
      tags:
      - Shop
    put:
      consumes:
      - application/json
      description: Update product BY ID , only ID is required , other fields are optional
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.UpdateProductReq'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/http.updateProductResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Update product
      tags:
      - Products
  /api/v1/shops/products/{id}:
    get:
      consumes:
      - application/json
      description: Get shop detail by id
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/http.detailProductResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: get shop detail by their id
      tags:
      - Products
  /api/v1/shops/products/all:
    get:
      consumes:
      - application/json
      description: Get all products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.getAllProductsResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Get all products
      tags:
      - Shop
  /api/v1/users:
    put:
      consumes:
      - application/json
      description: Update user avatar
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: Update user avatar request
        in: body
        name: updateReq
        required: true
        schema:
          $ref: '#/definitions/http.updateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.UpdateResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "404":
          description: User Not Found
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Update User avatar
      tags:
      - User
  /api/v1/users/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve detailed information about a specific user
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.detailResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "404":
          description: User Not Found
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Get User Details
      tags:
      - User
  /api/v1/users/address:
    post:
      consumes:
      - application/json
      description: Add a new address for a user
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: Address
        in: body
        name: address
        required: true
        schema:
          $ref: '#/definitions/http.addressReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.detailAddressResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Add New Address
      tags:
      - Address
  /api/v1/users/address/:
    patch:
      consumes:
      - application/json
      description: Update an existing address for a user
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: Address ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated Address
        in: body
        name: address
        required: true
        schema:
          $ref: '#/definitions/http.addressReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.detailAddressResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "404":
          description: Address Not Found
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Update Address
      tags:
      - Address
  /api/v1/users/distribute-token:
    post:
      consumes:
      - application/json
      description: Generate and distribute a new JWT token
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Verification token
        in: query
        name: token
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.distributeNewTokenResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Distribute New Token
      tags:
      - User
  /api/v1/users/forget-password:
    post:
      consumes:
      - application/json
      description: Initiate a password reset request
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Forget Password Request
      tags:
      - User
  /api/v1/users/reset-password:
    post:
      consumes:
      - application/json
      description: Reset user's password using a valid reset token
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - description: Reset token
        in: query
        name: token
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - description: New password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Reset Password
      tags:
      - User
  /api/v1/users/sign-in:
    post:
      consumes:
      - application/json
      description: Authenticate user and provide a JWT token
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        type: string
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.signInResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: User Sign In
      tags:
      - User
  /api/v1/users/sign-up:
    post:
      consumes:
      - application/json
      description: Create a new user account
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - description: Name
        in: body
        name: Name
        required: true
        schema:
          type: string
      - description: Email
        in: body
        name: Email
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: Password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.signUpResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: User Sign Up
      tags:
      - User
  /api/v1/users/signout:
    post:
      consumes:
      - application/json
      description: Sign out the current user
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: User Sign Out
      tags:
      - User
  /api/v1/users/verify-request:
    post:
      consumes:
      - application/json
      description: Verify the validity of a password reset request
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "404":
          description: Request Not Found
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Verify Email
      tags:
      - User
  /api/v1/users/verify-user:
    post:
      consumes:
      - application/json
      description: Complete user account verification
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - description: Verification token
        in: query
        name: token
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Verify User Account
      tags:
      - User
  /api/v1/vouchers:
    get:
      consumes:
      - application/json
      description: Get a list of vouchers with optional filtering
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        name: limit
        type: integer
      - description: Filter by shop ID
        in: query
        name: shop_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Resp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: List vouchers
      tags:
      - Voucher
    post:
      consumes:
      - application/json
      description: Create a new voucher
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: Voucher creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.createVoucherReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Resp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Create a voucher
      tags:
      - Voucher
  /api/v1/vouchers/apply:
    post:
      consumes:
      - application/json
      description: Apply a voucher to calculate discount amount
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: Apply voucher request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.applyVoucherReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Resp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Apply a voucher
      tags:
      - Voucher
  /api/v1/vouchers/by-code{code}:
    get:
      consumes:
      - application/json
      description: Get details of a specific voucher , pass id or code as param one
        of them must be presented if search by id change the route to by-id/id
      parameters:
      - default: '"*"'
        description: Access-Control-Allow-Origin
        in: header
        name: Access-Control-Allow-Origin
        type: string
      - default: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NjAxMTk2NjgsImlhdCI6MTcyODU4MzY2OCwic3ViIjoiNjcwNzgyNWQ0NTgwNGNhYWY4MzE2OTU3Iiwic2Vzc2lvbl9pZCI6InpnSFJMd1NmTnNQVnk2d2g3M0ZLVmpqZXV6T1ZnWGZSMjdRYVd1eGtsdzQ9IiwidHlwZSI6IiIsInJlZnJlc2giOmZhbHNlfQ.Pti0gJ5fO4WjGTsxShGv90pr0E_0jMJdWFEUJYKG4VU
        description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 6707825d45804caaf8316957
        description: User ID
        in: header
        name: x-client-id
        required: true
        type: string
      - default: zgHRLwSfNsPVy6wh73FKVjjeuzOVgXfR27QaWuxklw4=
        description: Session ID
        in: header
        name: session-id
        required: true
        type: string
      - description: Detail Voucher Request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/http.DetailVoucherReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Resp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Resp'
      summary: Get voucher details
      tags:
      - Voucher
swagger: "2.0"
